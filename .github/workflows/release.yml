name: Build and Release DMG

on:
  push:
    branches: [ main ]
  
  # Allow manual workflow dispatch
  workflow_dispatch:

permissions:
  contents: write
  
jobs:
  build-and-release:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache npm dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          node_modules
          frontend/node_modules
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-
        
    - name: Install dependencies
      run: |
        npm install
        cd frontend && npm install
        cd ../backend && pip install -r requirements.txt
        
    - name: Install PyInstaller
      run: |
        cd backend
        pip install pyinstaller
        
    - name: Build application
      env:
        CI: false
      run: npm run build:all
      
    - name: Package Electron app
      env:
        CI: false
      run: npm run dist:mac
      
    - name: Get version
      id: version
      run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: Create Release with GitHub CLI
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME="v${{ steps.version.outputs.VERSION }}-${{ github.run_number }}"
        RELEASE_NAME="PR Monitor v${{ steps.version.outputs.VERSION }} Build ${{ github.run_number }}"
        
        # Create release notes
        cat > release_notes.md << 'EOF'
        ## PR Monitor Release
        
        **Version:** ${{ steps.version.outputs.VERSION }}
        **Build:** ${{ github.run_number }}
        **Commit:** ${{ github.sha }}
        
        ### Features in this release:
        - Visual navigation path system with light â†’ dark color hierarchy
        - GitHub-style tray icons (ðŸŸ¢ green/ðŸŸ¡ yellow) for review status
        - Complete node labeling: T (teams), R (repositories), PR (pull requests)
        - Scrollable subscription lists
        - Enhanced WebSocket stability
        
        ### Installation:
        1. Download the DMG file below
        2. Open the DMG and drag PR Monitor to Applications
        3. Launch the app and enter your GitHub token
        
        **Note:** This is an unsigned application. On first launch, you may need to right-click and select "Open" or go to System Preferences > Security & Privacy to allow it to run.
        EOF
        
        # Create release and upload assets
        gh release create "$TAG_NAME" \
          --title "$RELEASE_NAME" \
          --notes-file release_notes.md \
          --latest \
          "./dist/PR Monitor-${{ steps.version.outputs.VERSION }}-arm64.dmg#PR-Monitor-v${{ steps.version.outputs.VERSION }}-arm64.dmg" \
          "./dist/PR Monitor-${{ steps.version.outputs.VERSION }}-arm64-mac.zip#PR-Monitor-v${{ steps.version.outputs.VERSION }}-arm64.zip"